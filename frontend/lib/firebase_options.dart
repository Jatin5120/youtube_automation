// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:frontend/utils/utils.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions currentPlatform(Variant variant) {
    if (kIsWeb) {
      return switch (variant) {
        Variant.development => web,
        Variant.variant1 => variant1,
        Variant.variant2 => variant2,
        Variant.variant3 => variant3,
      };
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for android - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.iOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for ios - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyA99luKVTLx4X6GbrnH3FM44wDTktkmrmY',
    appId: '1:651649356769:web:ad19f450c5697aaf5538a0',
    messagingSenderId: '651649356769',
    projectId: 'automation-f1555',
    authDomain: 'automation-f1555.firebaseapp.com',
    storageBucket: 'automation-f1555.appspot.com',
    measurementId: 'G-90Z5WX67TD',
  );

  static const FirebaseOptions variant1 = FirebaseOptions(
    apiKey: "AIzaSyCvnse-_cbdG_cE90Mf3bMxIaXw25szO70",
    appId: "1:21225787457:web:9b15dadaa509bae60cb6c0",
    messagingSenderId: "21225787457",
    projectId: "automation-f7a18",
    authDomain: "automation-f7a18.firebaseapp.com",
    storageBucket: "automation-f7a18.appspot.com",
  );

  static const FirebaseOptions variant2 = FirebaseOptions(
    apiKey: "AIzaSyCvnse-_cbdG_cE90Mf3bMxIaXw25szO70",
    appId: "1:21225787457:web:c5364dec8bc232a60cb6c0",
    messagingSenderId: "21225787457",
    projectId: "automation-f7a18",
    authDomain: "automation-f7a18.firebaseapp.com",
    storageBucket: "automation-f7a18.appspot.com",
  );

  static const FirebaseOptions variant3 = FirebaseOptions(
    apiKey: "AIzaSyCvnse-_cbdG_cE90Mf3bMxIaXw25szO70",
    appId: "1:21225787457:web:9df4f43b7a989b300cb6c0",
    messagingSenderId: "21225787457",
    projectId: "automation-f7a18",
    authDomain: "automation-f7a18.firebaseapp.com",
    storageBucket: "automation-f7a18.appspot.com",
  );
}
